name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: macos-10.15
    strategy:
      matrix:
        node-version: [14.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Detect project version
      id: project_version
      run: echo "::set-output name=project_version::$(node -p "require('./package.json').version")"
      shell: bash
    - name: Current project version
      run: echo ${{ steps.project_version.outputs.project_version}}
    - name: Decrypt sign file
      run: ./.github/scripts/decrypt.sh
      env:
        CSC_LINK_GPG_PASSWORD: ${{ secrets.CSC_LINK_GPG_PASSWORD }}
    - name: Download packages
      run: npm install
    - name: Build project
      env:
        CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
      run: npm run electron:build
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ steps.project_version.outputs.project_version}}
        release_name: SearchX ${{ steps.project_version.outputs.project_version}}
        draft: true
        prerelease: false
    - name: Upload Release mac 7z
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist_electron/searchx-${{ steps.project_version.outputs.project_version}}-mac.7z
        asset_name: searchx-${{ steps.project_version.outputs.project_version}}-mac.7z
        asset_content_type: application/x-7z-compressed
    - name: Upload Release mac zip
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist_electron/searchx-${{ steps.project_version.outputs.project_version}}-mac.zip
        asset_name: searchx-${{ steps.project_version.outputs.project_version}}-mac.zip
        asset_content_type: application/zip
    - name: Upload Release mac dmg
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist_electron/searchx-${{ steps.project_version.outputs.project_version}}.dmg
        asset_name: searchx-${{ steps.project_version.outputs.project_version}}.dmg
        asset_content_type: application/zip
    - name: Upload Release mac pkg
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist_electron/searchx-${{ steps.project_version.outputs.project_version}}.pkg
        asset_name: searchx-${{ steps.project_version.outputs.project_version}}.pkg
        asset_content_type: application/zip
